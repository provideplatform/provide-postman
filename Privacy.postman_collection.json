{
	"info": {
		"_postman_id": "795ec13e-c7bd-410f-8ee0-128ce22972e1",
		"name": "Privacy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List Provers",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{org.access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{privacyBaseUrl}}/api/v1/provers",
					"host": [
						"{{privacyBaseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"provers"
					]
				},
				"description": "Retrieves a list of `Prover` instances"
			},
			"response": []
		},
		{
			"name": "Create Circuit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Sets the org_id from the id received in response",
							"const response = pm.response.json();",
							"",
							"pm.environment.set(\"circuit_id\", response.id),",
							"pm.environment.set(\"note_store_id\", response.store_id),",
							"pm.environment.set(\"nullifier_store_id\", response.nullifier_store_id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{org.access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Prover demo name\",\n    \"identifier\": \"cubic\",\n    \"provider\": \"gnark\",\n    \"proving_scheme\": \"groth16\",\n    \"curve\": \"BN254\"\n}"
				},
				"url": {
					"raw": "{{privacyBaseUrl}}/api/v1/provers",
					"host": [
						"{{privacyBaseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"provers"
					]
				},
				"description": "Creates a `Circuit`.\n\nYou must provision a circuit before it can be used to generate and verify proofs. The foregoing holds true regardless of which provider, proving_scheme, curve and circuit identifier you specify (or source, if the raw source code of the `Circuit` is provided instead of an identifier).\n\nA powerful aspect of this API is the asynchronous nature by which computationally-intensive cryptographic operations are executed. The lifecycle of a zero-knowledge circuit depends largely on the chosen proving_scheme. For example, zkSNARK proving schemes (i.e., groth16) require a trusted setup whereas more modern schemes (i.e., plonk) do not.\n\nA persistent store is implicitly initialized upon the creation of a new circuit unless an existing store_id is provided and the referenced store is valid in the context of the circuit and authorized `scope`.\n"
			},
			"response": [
				{
					"name": "Circuit Created",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Prover demo name\",\n    \"identifier\": \"Cubic\",\n    \"provider\": \"gnark\",\n    \"proving_scheme\": \"groth16\",\n    \"curve\": \"BN254\",\n    \"vault_id\": \"{{vault_id}}\",\n    \"description\": \"Prover example description\",\n    \"type\": \"circuit\",\n    \"key_id\": \"{{key_id}}\"\n}"
						},
						"url": {
							"raw": "{{privacyBaseUrl}}/api/v1/circuits",
							"host": [
								"{{privacyBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"circuits"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Mon, 15 Nov 2021 15:29:11 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Content-Length",
							"value": "572"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Accept, Accept-Encoding, Authorization, Cache-Control, Content-Length, Content-Type, Origin, User-Agent, X-CSRF-Token, X-Requested-With"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "GET, POST, PUT, DELETE, OPTIONS"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "X-Total-Results-Count"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"a5c4a5b4-2a21-4475-9522-28dca1accfef\",\n    \"created_at\": \"2021-11-15T15:29:07.495270809Z\",\n    \"vault_id\": \"62c1d447-c3a1-4c02-865d-cb15150c12ba\",\n    \"encryption_key_id\": null,\n    \"proving_key_id\": null,\n    \"verifying_key_id\": null,\n    \"name\": \"Prover demo name\",\n    \"description\": null,\n    \"identifier\": \"Cubic\",\n    \"provider\": \"gnark\",\n    \"proving_scheme\": \"groth16\",\n    \"curve\": \"BN254\",\n    \"status\": \"pending_setup\",\n    \"note_store_id\": \"f0b63d3f-ae8b-4748-a7a5-950854cc00a3\",\n    \"nullifier_store_id\": \"04c49dcb-de0d-4237-bfa5-0f9b87a24cf1\"\n}"
				}
			]
		},
		{
			"name": "Retrieve Store Value",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{org.access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{privacyBaseUrl}}/api/v1/provers/:id/store",
					"host": [
						"{{privacyBaseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"provers",
						":id",
						"store"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{circuit_id}}",
							"description": "(Required) ID of target `Prover`. _UUID as specified by RFC4122_"
						}
					]
				},
				"description": "Returns the store value of the specified `Circuit`. The store value is a hash of the proof."
			},
			"response": []
		},
		{
			"name": "Get Circuit Details",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{org.access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{privacyBaseUrl}}/api/v1/provers/:id",
					"host": [
						"{{privacyBaseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"provers",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{circuit_id}}"
						}
					]
				},
				"description": "Returns details of the target `Circuit`."
			},
			"response": [
				{
					"name": "Circuit details returned",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{privacyBaseUrl}}/api/v1/circuits/:id",
							"host": [
								"{{privacyBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"circuits",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{circuit_id}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Mon, 15 Nov 2021 15:30:36 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Content-Length",
							"value": "1702"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Accept, Accept-Encoding, Authorization, Cache-Control, Content-Length, Content-Type, Origin, User-Agent, X-CSRF-Token, X-Requested-With"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "GET, POST, PUT, DELETE, OPTIONS"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "X-Total-Results-Count"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"a5c4a5b4-2a21-4475-9522-28dca1accfef\",\n    \"created_at\": \"2021-11-15T15:29:07.495271Z\",\n    \"vault_id\": \"62c1d447-c3a1-4c02-865d-cb15150c12ba\",\n    \"encryption_key_id\": null,\n    \"proving_key_id\": null,\n    \"verifying_key_id\": null,\n    \"name\": \"Prover demo name\",\n    \"description\": \"unspecified error\",\n    \"identifier\": \"Cubic\",\n    \"provider\": \"gnark\",\n    \"proving_scheme\": \"groth16\",\n    \"curve\": \"BN254\",\n    \"status\": \"failed\",\n    \"note_store_id\": \"f0b63d3f-ae8b-4748-a7a5-950854cc00a3\",\n    \"nullifier_store_id\": \"04c49dcb-de0d-4237-bfa5-0f9b87a24cf1\",\n    \"artifacts\": {\n        \"binary\": \"a9734e62496e7465726e616c5661726961626c657302714e625075626c69635661726961626c657302714e625365637265745661726961626c657301644c6f677380694465627567496e666f81a266466f726d6174782c5b282573202a20312920213d20282573202a203529202b20282573202a203129202b20282573202a2031295d69546f5265736f6c766584010002046d4e62436f6e73747261696e7473036f4e62434f436f6e73747261696e7473026b436f6e73747261696e747383a4614c811bd8000000200000026152811bd800000020000002614f811b980000002000000366536f6c76657200a4614c811b98000000200000036152811bd800000020000002614f811b980000002000000466536f6c76657200a4614c811b58000000200000016152811b5800000020000000614f831b40000000800000001bd8000000200000021b980000002000000466536f6c766572006c436f656666696369656e7473858400000000841bac96341c4ffffffb1b36fc76959f60cd291b666ea36f7879462e1b0e0a77c19a07df2f841b592c68389ffffff61b6df8ed2b3ec19a531bccdd46def0f28c5c1b1c14ef83340fbe5e841b974bc177a00000061bf13771b2da58a3671b51e1a2470908122e1b2259d6b14729c0fa841b1b0d0ef99fffffe61beaba68a3a32a913f1b47d8eb76d8dd06891b15d0085520f5bbc3\",\n        \"proving_key\": \"\",\n        \"verifying_key\": \"\"\n    }\n}"
				}
			]
		},
		{
			"name": "Generate Proof",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.environment.set(\"proof\", response.proof);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{org.access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Prover demo name\",\n    \"identifier\": \"cubic\",\n    \"provider\": \"gnark\",\n    \"proving_scheme\": \"groth16\",\n    \"curve\": \"BN254\",    \n    \"store_id\": \"{{store_id}}\",\n    \"witness\": {\n        \"X\": \"3\",\n        \"Y\": \"35\"\n    }\n}"
				},
				"url": {
					"raw": "{{privacyBaseUrl}}/api/v1/provers/:id/prove",
					"host": [
						"{{privacyBaseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"provers",
						":id",
						"prove"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{circuit_id}}",
							"description": "(Required) ID of target `Prover`. _UUID as specified by RFC4122_"
						}
					]
				},
				"description": "Once you have provisioned a circuit, this API can be used to generate a proof given valid witness parameters. Calling this API has an implicit side-effect of writing the hash of generated proof to the persistent store associated with the `Circuit`."
			},
			"response": [
				{
					"name": "Prove Circuit",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"witness\":{\n        \"X\": \"3\",\n        \"Y\": \"35\"\n    }\n}"
						},
						"url": {
							"raw": "{{privacyBaseUrl}}/api/v1/circuits/:id/prove",
							"host": [
								"{{privacyBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"circuits",
								":id",
								"prove"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{circuit_id}}",
									"description": "(Required) ID of target `Prover`. _UUID as specified by RFC4122_"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Mon, 22 Nov 2021 13:21:02 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Content-Length",
							"value": "276"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Accept, Accept-Encoding, Authorization, Cache-Control, Content-Length, Content-Type, Origin, User-Agent, X-CSRF-Token, X-Requested-With"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "GET, POST, PUT, DELETE, OPTIONS"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "X-Total-Results-Count"
						}
					],
					"cookie": [],
					"body": "{\n    \"proof\": \"85e76bc34d6c61b5e96407f07b91d98b92fc96c695e4d8b5756a4f3a45ef9d64a49719f3203c2131c3becd4076b9a0e919c48f782167564e3fed6347f78691c2292c270a72c084f6e684c62abc100857be64d299186780cb74164a7262dab3eea60a45cbd17def94cea1fd43355c3606c21868d1e6dcb9db2831105f660e88f8\"\n}"
				}
			]
		},
		{
			"name": "Verify Proof",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{org.access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"witness\": {\n        \"X\": \"3\",\n        \"Y\": \"35\"\n    },\n    \"proof\": \"{{proof}}\"\n}"
				},
				"url": {
					"raw": "{{privacyBaseUrl}}/api/v1/provers/:id/verify",
					"host": [
						"{{privacyBaseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"provers",
						":id",
						"verify"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{circuit_id}}",
							"description": "(Required) ID of target `Prover`. _UUID as specified by RFC4122_"
						}
					]
				},
				"description": "Verify a `Proof` using the given `Witness` parameters.\n\nA `Proof` is returned in the `prove_circuit` request. The `x` and `y` values should be the same as the values used in the `prove_circuit` request."
			},
			"response": [
				{
					"name": "Verify",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"witness\": {\n        \"X\": \"3\",\n        \"Y\": \"35\"\n    },\n    \"proof\": \"{{proof}}\"\n}"
						},
						"url": {
							"raw": "{{privacyBaseUrl}}/api/v1/circuits/:id/verify",
							"host": [
								"{{privacyBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"circuits",
								":id",
								"verify"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{circuit_id}}",
									"description": "(Required) ID of target `Prover`. _UUID as specified by RFC4122_"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Mon, 22 Nov 2021 13:22:13 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=UTF-8"
						},
						{
							"key": "Content-Length",
							"value": "23"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "Accept, Accept-Encoding, Authorization, Cache-Control, Content-Length, Content-Type, Origin, User-Agent, X-CSRF-Token, X-Requested-With"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "GET, POST, PUT, DELETE, OPTIONS"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "X-Total-Results-Count"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": true\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token_application}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}