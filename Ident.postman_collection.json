{
	"info": {
		"_postman_id": "63fc05ca-adfe-4247-92be-21365dac602e",
		"name": "Ident",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Create user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Sets the jwt_token_application or jwt_token_organization from the token received in response",
									"const response = pm.response.json();",
									"",
									"pm.environment.set(\"user_id_temp\", response.id);",
									"pm.environment.set(\"email_temp\", response.email);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{$randomEmail}}\",\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"password\": \"Test123!\"\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/users",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Create a new `user`.\n\nTo create a virtual `user` for an `Application`, do not include a `password` in the request body and pass an `Application` or scoped bearer <JWT> in the authorization header.\n\n| Parameter  | Required | Description                                               |\n|------------|----------|-----------------------------------------------------------|\n| email      |     y    | email address of invitee                                  |\n| first_name |     y    | first name of invitee                                     |\n| last_name  |     y    | last name of invitee                                      |\n| password   |     n    | password for user account. Not required for virtual users |\n|            |          |                                                           |\n|            |          |                                                           |"
					},
					"response": [
						{
							"name": "User created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"email\": \"<string>\",\n \"first_name\": \"<string>\",\n \"last_name\": \"<string>\",\n \"id\": \"<string>\",\n \"created_at\": \"<string>\",\n \"name\": \"<string>\",\n \"permissions\": \"<integer>\",\n \"privacy_policy_agreed_at\": \"<string>\",\n \"terms_of_service_agreed_at\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/users",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Retrieves a list of `User` instances in the authorized scope. A `User` may be associated with a `Application` and one or more `Organization` instances.\n\nNote: `List users` requires elevated permissions and will return `403 Forbidden` to any user without sufficient permissions."
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"name\": \"<string>\",\n  \"permissions\": \"<integer>\",\n  \"privacy_policy_agreed_at\": \"<string>\",\n  \"terms_of_service_agreed_at\": \"<string>\"\n },\n {\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"name\": \"<string>\",\n  \"permissions\": \"<integer>\",\n  \"privacy_policy_agreed_at\": \"<string>\",\n  \"terms_of_service_agreed_at\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "Get user detail",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/users/:id",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user_id}}",
									"description": "(Required) ID of target `User`"
								}
							]
						},
						"description": "Returns details for the target `User`"
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								}
							],
							"cookie": [],
							"body": "{\n \"email\": \"<string>\",\n \"first_name\": \"<string>\",\n \"last_name\": \"<string>\",\n \"id\": \"<string>\",\n \"created_at\": \"<string>\",\n \"name\": \"<string>\",\n \"permissions\": \"<integer>\",\n \"privacy_policy_agreed_at\": \"<string>\",\n \"terms_of_service_agreed_at\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{email}}\"\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/users/:id",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user_id}}",
									"description": "ID of user to be updated"
								}
							]
						},
						"description": "Update target `User`."
					},
					"response": [
						{
							"name": "The request was successful but did not return a response.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": ""
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/users/:id",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user_id}}",
									"description": "(Required) ID of target `User`. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "Delete target `User`"
					},
					"response": [
						{
							"name": "Target `User` deleted but the request did not return a response.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Authentication & Authorization",
			"item": [
				{
					"name": "Application authorization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Sets the jwt_token from the token received in response",
									"const response = pm.response.json();",
									"",
									"pm.environment.set(\"app.access_token\", response.access_token);",
									"",
									"pm.environment.set(\"app.refresh_token\", response.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{org.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "grant_type",
								"value": "refresh_token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"application_id\": \"{{application_id}}\",\n    \"scope\": \"offline_access\"\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/tokens",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tokens"
							]
						},
						"description": "Authorizes a Token on behalf of an `Application`. Returns an authorized JSON formatted JWT with an `offline-access` scoped long-term `access_token` that serves as authentication for `Application` related requests.\n\nTo authorize an `Application`, you must first authorize the `Organization` that created the `Application` and pass the `AccessToken` scoped for the `Organization`"
					},
					"response": [
						{
							"name": "Successfully authorized a `Token`",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scope\": \"<string>\",\n    \"organization_id\": \"<string>\",\n    \"application_id\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"scope\": \"<string>\",\n \"expires_in\": \"<number>\",\n \"access_token\": \"<password>\",\n \"refresh_token\": \"<password>\",\n \"token\": \"<password>\",\n \"permissions\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "User authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Sets the jwt_token from the token received in response",
									"const response = pm.response.json();",
									"",
									"pm.environment.set(\"user.access_token\", response.token.access_token);",
									"",
									"pm.environment.set(\"user.refresh_token\", response.token.refresh_token);",
									"",
									"pm.environment.set(\"user_id\", response.user.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\":\"{{password}}\",\n    \"scope\": \"offline_access\"\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/authenticate",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"authenticate"
							]
						},
						"description": "Returns a `bearer` API token for the a specified `User`. \n\nThe presence of a `bearer` API token is required to authorize most Provide API calls. A `bearer` API token is an encoded JWT which contains a subject claim (`sub`) which references an authorized entity (i.e., the `User`, `Application` or `Organization`). The authorized entity uses a signed `bearer` authorization Token to access one or more resources for which the Token was authorized. Unless otherwise noted, all API requests must include a header such as `Authorization: bearer <jwt>`."
					},
					"response": [
						{
							"name": "User authentication",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\":\"{{password}}\",\n    \"scope\": \"offline_access\"\n}"
								},
								"url": {
									"raw": "{{identBaseUrl}}/api/v1/authenticate",
									"host": [
										"{{identBaseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"authenticate"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 02 Feb 2022 19:28:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Accept-Encoding, Authorization, Cache-Control, Content-Length, Content-Type, Origin, User-Agent, X-CSRF-Token, X-Requested-With"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, PUT, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Total-Results-Count"
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"id\": \"b6607ade-c13a-44ba-9939-c1fc7129b7b2\",\n        \"created_at\": \"2020-12-16T05:13:40.240119Z\",\n        \"name\": \"Tom Collins\",\n        \"first_name\": \"Tom\",\n        \"last_name\": \"Collins\",\n        \"email\": \"tom@collins.com\",\n        \"permissions\": 500,\n        \"privacy_policy_agreed_at\": \"2020-12-16T05:13:41.967Z\",\n        \"terms_of_service_agreed_at\": \"2020-12-16T05:13:48.968Z\"\n    },\n    \"token\": {\n        \"id\": \"\",\n        \"access_token\": \"\",\n        \"refresh_token\": \"\",\n        \"expires_in\": 86400,\n        \"scope\": \"offline_access\",\n        \"permissions\": 1048991\n    }\n}"
						}
					]
				},
				{
					"name": "User authorization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Sets the jwt_token_application or jwt_token_organization from the token received in response",
									"const response = pm.response.json();",
									"",
									"pm.environment.set(\"jwt_token\", response.token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{app.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": \"{{user_id}}\"\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/tokens",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tokens"
							]
						},
						"description": "Authorizes a Token on behalf of an  `Application`. Returns an authorized JSON formatted JWT with an `offline-access` scoped long-term `access_token` that serves as authentication for `Application` related requests."
					},
					"response": [
						{
							"name": "Successfully authorized a `Token`",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scope\": \"<string>\",\n    \"organization_id\": \"<string>\",\n    \"application_id\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"scope\": \"<string>\",\n \"expires_in\": \"<number>\",\n \"access_token\": \"<password>\",\n \"refresh_token\": \"<password>\",\n \"token\": \"<password>\",\n \"permissions\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "List revocable tokens",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/tokens",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tokens"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Limits resulting response to the page number specified",
									"disabled": true
								},
								{
									"key": "rpp",
									"value": "20",
									"description": "Sets the number of results included per page",
									"disabled": true
								}
							]
						},
						"description": "Retrieves a list of revocable tokens"
					},
					"response": [
						{
							"name": "The request was successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tokens?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"scope\": \"<string>\",\n  \"expires_in\": \"<number>\",\n  \"access_token\": \"<password>\",\n  \"refresh_token\": \"<password>\",\n  \"token\": \"<password>\",\n  \"permissions\": \"<number>\"\n },\n {\n  \"id\": \"<string>\",\n  \"scope\": \"<string>\",\n  \"expires_in\": \"<number>\",\n  \"access_token\": \"<password>\",\n  \"refresh_token\": \"<password>\",\n  \"token\": \"<password>\",\n  \"permissions\": \"<number>\"\n }\n]"
						}
					]
				},
				{
					"name": "Organization authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Sets the jwt_token from the token received in response",
									"const response = pm.response.json();",
									"",
									"pm.environment.set(\"org.access_token\", response.access_token);",
									"",
									"pm.environment.set(\"org.refresh_token\", response.refresh_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"organization_id\": \"{{organization_id}}\",\n    \"scope\": \"offline_access\"\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/tokens",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tokens"
							]
						},
						"description": "Authorizes a Token on behalf of an `Organization`. Returns an authorized JSON formatted JWT with an `offline-access` scoped long-term `access_token` that serves as authentication for `Organization` related requests."
					},
					"response": [
						{
							"name": "Organization authorization",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"organization_id\": \"{{organization_id}}\",\n    \"scope\": \"offline_access\"\n}"
								},
								"url": {
									"raw": "{{identBaseUrl}}/api/v1/tokens",
									"host": [
										"{{identBaseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tokens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 10 Dec 2021 20:56:41 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Accept-Encoding, Authorization, Cache-Control, Content-Length, Content-Type, Origin, User-Agent, X-CSRF-Token, X-Requested-With"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET, POST, PUT, DELETE, OPTIONS"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "X-Total-Results-Count"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"45086ac5-7985-4615-88cb-91f2d741aaf2\",\n    \"access_token\": \"\",\n    \"refresh_token\": \"\",\n    \"expires_in\": 86400,\n    \"scope\": \"offline_access\",\n    \"permissions\": 500\n}"
						}
					]
				},
				{
					"name": "Revoke token",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/tokens/:id",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tokens",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{app.access_token}}",
									"description": "(Required) ID of target `Token`. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "Revokes a previously-authorized `Token`. Used to remove access for current token scope."
					},
					"response": [
						{
							"name": "The request was successful but did not return a response.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tokens/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tokens",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Applications",
			"item": [
				{
					"name": "List Applications",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{org.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/applications",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"applications"
							],
							"query": [
								{
									"key": "page",
									"value": "110",
									"description": "Limits resulting response to the page number specified",
									"disabled": true
								},
								{
									"key": "rpp",
									"value": "50",
									"description": "Sets the number of results included per page",
									"disabled": true
								}
							]
						},
						"description": "Retrieve a list of `Application` instances in the authorized `scope`. The `scope` of the request can be found in the decoded payload of the authorization header JWT.\n\n`Application` instances can be scoped to `User`, `Organization` or other `Application` instances."
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/Applications?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"Applications"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"<string>\",\n  \"type\": \"baseline\",\n  \"id\": \"<uuid>\",\n  \"created_at\": \"<dateTime>\",\n  \"network_id\": \"<uuid>\",\n  \"user_id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"config\": {\n   \"baselined\": \"<boolean>\",\n   \"webhook_secret\": \"<string>\",\n   \"network_id\": \"<string>\"\n  },\n  \"hidden\": \"<boolean>\"\n },\n {\n  \"name\": \"<string>\",\n  \"type\": \"baseline\",\n  \"id\": \"<uuid>\",\n  \"created_at\": \"<dateTime>\",\n  \"network_id\": \"<uuid>\",\n  \"user_id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"config\": {\n   \"baselined\": \"<boolean>\",\n   \"webhook_secret\": \"<string>\",\n   \"network_id\": \"<string>\"\n  },\n  \"hidden\": \"<boolean>\"\n }\n]"
						}
					]
				},
				{
					"name": "Create Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Sets the org_id from the id received in response",
									"const response = pm.response.json();",
									"",
									"pm.environment.set(\"application_id\", response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{org.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomBsAdjective}} {{$randomBsNoun}}\",\n    \"description\": \"{{$randomCatchPhraseDescriptor}}\",\n    \"type\": \"baseline\",\n    \"network_id\": \"{{network_id}}\"\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/applications",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"applications"
							]
						},
						"description": "Create a `Application` with the details provided in the request body.\n\nRequired fields:\n- `name`\n\nOptional fields:\n- `user_id`\n- `description`\n- `hidden`\n- `type`\n- `network_id`\n- `config`"
					},
					"response": [
						{
							"name": "The request was successful and a new Application was created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"baseline\",\n    \"network_id\": \"<uuid>\",\n    \"user_id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"config\": {\n        \"baselined\": \"<boolean>\",\n        \"webhook_secret\": \"<string>\",\n        \"network_id\": \"<string>\"\n    },\n    \"hidden\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/Applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"Applications"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"type\": \"baseline\",\n \"id\": \"<uuid>\",\n \"created_at\": \"<dateTime>\",\n \"network_id\": \"<uuid>\",\n \"user_id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"config\": {\n  \"baselined\": \"<boolean>\",\n  \"webhook_secret\": \"<string>\",\n  \"network_id\": \"<string>\"\n },\n \"hidden\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Get Application details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var value = pm.environment.get('application_id')",
									"",
									"if (value == undefined || value == null || value.length == 0) {",
									"    throw new Error('No \"application_id\" set!')",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{org.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/applications/:id",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{application_id}}",
									"description": "(Required) ID of target `Application`. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "Returns details for the specified `Application`."
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/Applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"Applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"type\": \"baseline\",\n \"id\": \"<uuid>\",\n \"created_at\": \"<dateTime>\",\n \"network_id\": \"<uuid>\",\n \"user_id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"config\": {\n  \"baselined\": \"<boolean>\",\n  \"webhook_secret\": \"<string>\",\n  \"network_id\": \"<string>\"\n },\n \"hidden\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Associate Application Organization",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{org.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"organization_id\": \"{{organization_id}}\"\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/applications/:id/organizations",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								":id",
								"organizations"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{application_id}}",
									"description": "(Required) ID of target `Application`. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "Associates an `Organization`to the target `Application`.\n\nBearer JWT should be scoped to `Application`. \n\nThe `organization_id` contained in body cannot be equal to an `organization_id` already associated with the target `Application`"
					},
					"response": [
						{
							"name": "The request was successful and a new user was associated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_id\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/Applications/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"Applications",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Associate Application User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{org.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": \"{{user_id}}\"\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/applications/:id/users",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								":id",
								"users"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{application_id}}",
									"description": "(Required) ID of target `Application`. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "Associates a `User` to the target `Application`.\n\nBearer JWT should be scoped to `Application`. \n\nThe `user_id` contained in body cannot be equal to a `user_id` already associated with the target `Application`."
					},
					"response": [
						{
							"name": "The request was successful and a new user was associated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_id\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/Applications/:id/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"Applications",
										":id",
										"users"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Application users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{org.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/applications/:id/users",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								":id",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Limits resulting response to the page number specified",
									"disabled": true
								},
								{
									"key": "rpp",
									"value": "20",
									"description": "Sets the number of results included per page",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{application_id}}",
									"description": "(Required) ID of target `Application`. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "Retrieves a list of `Organization` records associated with a target `Application`"
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/Applications/:id/users?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"Applications",
										":id",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"name\": \"<string>\",\n  \"permissions\": \"<integer>\",\n  \"privacy_policy_agreed_at\": \"<string>\",\n  \"terms_of_service_agreed_at\": \"<string>\"\n },\n {\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"name\": \"<string>\",\n  \"permissions\": \"<integer>\",\n  \"privacy_policy_agreed_at\": \"<string>\",\n  \"terms_of_service_agreed_at\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "List Application Organizations",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{org.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/applications/:id/organizations",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								":id",
								"organizations"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Limits resulting response to the page number specified",
									"disabled": true
								},
								{
									"key": "rpp",
									"value": "20",
									"description": "Sets the number of results included per page",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{application_id}}",
									"description": "(Required) ID of target `Application`. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "Retrieves a list of `Organization` records associated with a target `Application`"
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/Applications/:id/users?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"Applications",
										":id",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"name\": \"<string>\",\n  \"permissions\": \"<integer>\",\n  \"privacy_policy_agreed_at\": \"<string>\",\n  \"terms_of_service_agreed_at\": \"<string>\"\n },\n {\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"id\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"name\": \"<string>\",\n  \"permissions\": \"<integer>\",\n  \"privacy_policy_agreed_at\": \"<string>\",\n  \"terms_of_service_agreed_at\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "Update Application",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{org.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hidden\": true,\n    \"config\": {\n        \"is_onboarded\": true\n    }\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/applications/:id",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "6e9ac1a7-ea7b-4bda-a950-5bc500f16c54",
									"description": "(Required) ID of target `Application`. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "Updates the target `Application`."
					},
					"response": [
						{
							"name": "The request was successful but did not return a response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"type\": \"baseline\",\n    \"network_id\": \"<uuid>\",\n    \"user_id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"config\": {\n        \"baselined\": \"<boolean>\",\n        \"webhook_secret\": \"<string>\",\n        \"network_id\": \"<string>\"\n    },\n    \"hidden\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/Applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"Applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Application",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{app.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/applications/:id",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{application_id}}",
									"description": "(Required) ID of target `Application`. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "**Not currently implemented**\n\nDeletes the target `Application`"
					},
					"response": [
						{
							"name": "The request was successful but did not return a response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/Applications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"Applications",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"type\": \"baseline\",\n \"id\": \"<uuid>\",\n \"created_at\": \"<dateTime>\",\n \"network_id\": \"<uuid>\",\n \"user_id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"config\": {\n  \"baselined\": \"<boolean>\",\n  \"webhook_secret\": \"<string>\",\n  \"network_id\": \"<string>\"\n },\n \"hidden\": \"<boolean>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Create organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Sets the org_id from the id received in response",
									"const response = pm.response.json();",
									"",
									"pm.environment.set(\"organization_id\", response.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"{{$randomCatchPhraseDescriptor}}\",\n  \"name\": \"PK Test B\",\n  \"metadata\": {\n    \"hello\": \"{{$randomWord}}\",\n    \"arbitrary\": \"{{$randomWord}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/organizations",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations"
							]
						},
						"description": "Creates a new `Organization`"
					},
					"response": [
						{
							"name": "The request was successful and a new Organization was created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"description\": \"<string>\",\n \"name\": \"<string>\",\n \"id\": \"<UUID>\",\n \"user_id\": \"<UUID>\",\n \"created_at\": \"<Date-time>\",\n \"metadata\": \"<object>\"\n}"
						}
					]
				},
				{
					"name": "List organizations",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{user.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/organizations",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Limits resulting response to the page number specified",
									"disabled": true
								},
								{
									"key": "rpp",
									"value": "20",
									"description": "Sets the number of results included per page",
									"disabled": true
								}
							]
						},
						"description": "Retrieves a list of `Organization` instances in the authorized scope."
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"id\": \"<UUID>\",\n  \"user_id\": \"<UUID>\",\n  \"created_at\": \"<Date-time>\",\n  \"metadata\": \"<object>\"\n },\n {\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"id\": \"<UUID>\",\n  \"user_id\": \"<UUID>\",\n  \"created_at\": \"<Date-time>\",\n  \"metadata\": \"<object>\"\n }\n]"
						}
					]
				},
				{
					"name": "Delete organization",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/organizations/:id",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{organization_id}}",
									"description": "ID of the organizaiton to be deleted"
								}
							]
						},
						"description": "Deletes the given `Organization`"
					},
					"response": [
						{
							"name": "The request was successful",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"id\": \"<UUID>\",\n  \"user_id\": \"<UUID>\",\n  \"created_at\": \"<Date-time>\",\n  \"metadata\": \"<object>\"\n },\n {\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"id\": \"<UUID>\",\n  \"user_id\": \"<UUID>\",\n  \"created_at\": \"<Date-time>\",\n  \"metadata\": \"<object>\"\n }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Implemented",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations?page=1&rpp=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "rpp",
											"value": "20"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get organization details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/organizations/:id",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":id"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Limits resulting response to the page number specified",
									"disabled": true
								},
								{
									"key": "rpp",
									"value": "20",
									"description": "Sets the number of results included per page",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{organization_id}}"
								}
							]
						},
						"description": "Retrieve `Organization` details"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Implemented",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List organization users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/organizations/:id/users",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":id",
								"users"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{organization_id}}",
									"description": "(Required) ID of Organization. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "Retrieve `Organization` details"
					},
					"response": [
						{
							"name": "The request was successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"id\": \"<UUID>\",\n  \"user_id\": \"<UUID>\",\n  \"created_at\": \"<Date-time>\",\n  \"metadata\": \"<object>\"\n },\n {\n  \"description\": \"<string>\",\n  \"name\": \"<string>\",\n  \"id\": \"<UUID>\",\n  \"user_id\": \"<UUID>\",\n  \"created_at\": \"<Date-time>\",\n  \"metadata\": \"<object>\"\n }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Implemented",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update organization details",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Postman test Org\",\n    \"description\": \"Organization for testing in Postman\",\n    \"user_id\": \"{{user_id}}\",\n    \"metadata\": {\n        \"field\": \"number one\",\n        \"field2\": \"number two\"\n    }\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/organizations/:id",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{organization_id}}",
									"description": "(Required) ID of the `Organization` being updated. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "Update target `Organization`"
					},
					"response": [
						{
							"name": "The request was successful but did not return a response.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Implemented",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Add user to organization",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{org.access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": \"{{user_to_add}}\"\n}"
						},
						"url": {
							"raw": "{{identBaseUrl}}/api/v1/organizations/:id/users",
							"host": [
								"{{identBaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":id",
								"users"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{organization_id}}",
									"description": "(Required) ID of the `Organization` being updated. _UUID as specified by RFC4122_"
								}
							]
						},
						"description": "Update target `Organization`"
					},
					"response": [
						{
							"name": "The request was successful but did not return a response.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Implemented",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"metadata\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/organizations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<integer>\",\n \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Create Invitation",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{org.access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"organization_name\": \"PK Test C\",\n    \"application_id\": \"{{application_id}}\",\n    \"params\":{\n        \"is_organization_invite\": true\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{identBaseUrl}}/api/v1/invitations",
					"host": [
						"{{identBaseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"invitations"
					]
				},
				"description": "Sends a target entity a verifiable credential that is scoped to the context of the authorized `Organization` or `Application`"
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{user.access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}